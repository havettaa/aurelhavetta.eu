{"version":3,"file":"static/js/455.2572fbf8.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","components/Input/TextAreaInput.js","components/Input/ToogleInput.js","features/settings/profilesettings/index.js","pages/protected/ProfileSettings.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard"," function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import { useState } from \"react\"\r\n\r\n\r\nfunction TextAreaInput({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateInputValue = (val) => {\r\n        setValue(val)\r\n        updateFormValue({updateType, value : val})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n            </label>\r\n            <textarea value={value} className=\"textarea textarea-bordered w-full\" placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TextAreaInput","import { useState } from \"react\"\r\n\r\n\r\nfunction ToogleInput({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateToogleValue = () => {\r\n        setValue(!value)\r\n        updateFormValue({updateType, value : !value})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label cursor-pointer\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n                <input type=\"checkbox\" className=\"toggle\" checked={value}  onChange={(e) => updateToogleValue()}/>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ToogleInput\r\n","import moment from \"moment\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"\r\nimport { showNotification } from '../../common/headerSlice'\r\nimport InputText from '../../../components/Input/InputText'\r\nimport TextAreaInput from '../../../components/Input/TextAreaInput'\r\nimport ToogleInput from '../../../components/Input/ToogleInput'\r\n\r\nfunction ProfileSettings(){\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Call API to update profile settings changes\r\n    const updateProfile = () => {\r\n        dispatch(showNotification({message : \"Profile Updated\", status : 1}))    \r\n    }\r\n\r\n    const updateFormValue = ({updateType, value}) => {\r\n        console.log(updateType)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            \r\n            <TitleCard title=\"Profile Settings\" topMargin=\"mt-2\">\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <InputText labelTitle=\"Name\" defaultValue=\"Alex\" updateFormValue={updateFormValue}/>\r\n                    <InputText labelTitle=\"Email Id\" defaultValue=\"alex@dashwind.com\" updateFormValue={updateFormValue}/>\r\n                    <InputText labelTitle=\"Title\" defaultValue=\"UI/UX Designer\" updateFormValue={updateFormValue}/>\r\n                    <InputText labelTitle=\"Place\" defaultValue=\"California\" updateFormValue={updateFormValue}/>\r\n                    <TextAreaInput labelTitle=\"About\" defaultValue=\"Doing what I love, part time traveller\" updateFormValue={updateFormValue}/>\r\n                </div>\r\n                <div className=\"divider\" ></div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <InputText labelTitle=\"Language\" defaultValue=\"English\" updateFormValue={updateFormValue}/>\r\n                    <InputText labelTitle=\"Timezone\" defaultValue=\"IST\" updateFormValue={updateFormValue}/>\r\n                    <ToogleInput updateType=\"syncData\" labelTitle=\"Sync Data\" defaultValue={true} updateFormValue={updateFormValue}/>\r\n                </div>\r\n\r\n                <div className=\"mt-16\"><button className=\"btn btn-primary float-right\" onClick={() => updateProfile()}>Update</button></div>\r\n            </TitleCard>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileSettings","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport ProfileSettings from '../../features/settings/profilesettings'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Settings\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        <ProfileSettings />\r\n    )\r\n}\r\n\r\nexport default InternalPage"],"names":["_ref","title","children","topMargin","TopSideButtons","_jsxs","className","Subtitle","styleClass","_jsx","concat","labelTitle","labelStyle","containerStyle","type","defaultValue","placeholder","updateFormValue","updateType","_useState","useState","_useState2","_slicedToArray","value","setValue","onChange","e","val","target","checked","dispatch","useDispatch","console","log","_Fragment","TitleCard","InputText","TextAreaInput","ToogleInput","onClick","showNotification","message","status","useEffect","setPageTitle","ProfileSettings"],"sourceRoot":""}