{"version":3,"file":"static/js/653.bae51b68.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js","features/leads/index.js","pages/protected/Leads.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard"," function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n  }));\n}\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;","import moment from \"moment\"\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TitleCard from \"../../components/Cards/TitleCard\"\r\nimport { openModal } from \"../common/modalSlice\"\r\nimport { deleteLead, getLeadsContent } from \"./leadSlice\"\r\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from '../../utils/globalConstantUtil'\r\nimport TrashIcon from '@heroicons/react/24/outline/TrashIcon'\r\nimport { showNotification } from '../common/headerSlice'\r\n\r\nconst TopSideButtons = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const openAddNewLeadModal = () => {\r\n        dispatch(openModal({title : \"Add New Lead\", bodyType : MODAL_BODY_TYPES.LEAD_ADD_NEW}))\r\n    }\r\n\r\n    return(\r\n        <div className=\"inline-block float-right\">\r\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => openAddNewLeadModal()}>Add New</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Leads(){\r\n\r\n    const {leads } = useSelector(state => state.lead)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getLeadsContent())\r\n    }, [])\r\n\r\n    \r\n\r\n    const getDummyStatus = (index) => {\r\n        if(index % 5 === 0)return <div className=\"badge\">Not Interested</div>\r\n        else if(index % 5 === 1)return <div className=\"badge badge-primary\">In Progress</div>\r\n        else if(index % 5 === 2)return <div className=\"badge badge-secondary\">Sold</div>\r\n        else if(index % 5 === 3)return <div className=\"badge badge-accent\">Need Followup</div>\r\n        else return <div className=\"badge badge-ghost\">Open</div>\r\n    }\r\n\r\n    const deleteCurrentLead = (index) => {\r\n        dispatch(openModal({title : \"Confirmation\", bodyType : MODAL_BODY_TYPES.CONFIRMATION, \r\n        extraObject : { message : `Are you sure you want to delete this lead?`, type : CONFIRMATION_MODAL_CLOSE_TYPES.LEAD_DELETE, index}}))\r\n    }\r\n\r\n    return(\r\n        <>\r\n            \r\n            <TitleCard title=\"Current Leads\" topMargin=\"mt-2\" TopSideButtons={<TopSideButtons />}>\r\n\r\n                {/* Leads List in table format loaded from slice after api call */}\r\n            <div className=\"overflow-x-auto w-full\">\r\n                <table className=\"table w-full\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email Id</th>\r\n                        <th>Created At</th>\r\n                        <th>Status</th>\r\n                        <th>Assigned To</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            leads.map((l, k) => {\r\n                                return(\r\n                                    <tr key={k}>\r\n                                    <td>\r\n                                        <div className=\"flex items-center space-x-3\">\r\n                                            <div className=\"avatar\">\r\n                                                <div className=\"mask mask-squircle w-12 h-12\">\r\n                                                    <img src={l.avatar} alt=\"Avatar\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"font-bold\">{l.first_name}</div>\r\n                                                <div className=\"text-sm opacity-50\">{l.last_name}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>{l.email}</td>\r\n                                    <td>{moment(new Date()).add(-5*(k+2), 'days').format(\"DD MMM YY\")}</td>\r\n                                    <td>{getDummyStatus(k)}</td>\r\n                                    <td>{l.last_name}</td>\r\n                                    <td><button className=\"btn btn-square btn-ghost\" onClick={() => deleteCurrentLead(k)}><TrashIcon className=\"w-5\"/></button></td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </TitleCard>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Leads","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport Leads from '../../features/leads'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Leads\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        <Leads />\r\n    )\r\n}\r\n\r\nexport default InternalPage"],"names":["_ref","title","children","topMargin","TopSideButtons","_jsxs","className","Subtitle","styleClass","_jsx","concat","React","svgRef","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","dispatch","useDispatch","onClick","openModal","bodyType","MODAL_BODY_TYPES","LEAD_ADD_NEW","leads","useSelector","state","lead","useEffect","getLeadsContent","_Fragment","TitleCard","map","l","k","src","avatar","alt","first_name","last_name","email","moment","Date","add","format","index","CONFIRMATION","extraObject","message","type","CONFIRMATION_MODAL_CLOSE_TYPES","LEAD_DELETE","deleteCurrentLead","TrashIcon","setPageTitle","Leads"],"sourceRoot":""}